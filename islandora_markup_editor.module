<?php
/**
 * @file
 * Handles the creation/display of islandora:bornDigitalCModel objects.
 */

/**
 * Implements hook_menu().
 */
function islandora_markup_editor_menu() {
  $items['islandora/borndigital/setup/%islandora_object'] = array(
    'title' => 'Markup Editor Setup',
    'page callback' => 'islandora_markup_editor_setup',
    'page arguments' => array(3),
    'type' => MENU_CALLBACK,
    'access callback' => 'islandora_object_access_callback',
    'access arguments' => array(ISLANDORA_VIEW_OBJECTS, 3),
  );
  $items['islandora/markupeditor/save_data/%islandora_object'] = array(
    'title' => 'Save Data',
    'page callback' => 'islandora_markup_editor_savedata',
    'page arguments' => array(3),
    'type' => MENU_CALLBACK,
    'access callback' => 'islandora_object_access_callback',
    'access arguments' => array(ISLANDORA_CRITICAL_EDITION_EDIT_WITH_CWRC_WRITER, 3),
  );
  return $items;
}

/**
 * Menu callback for the editor to persist TEI data.
 *
 * @param AbstractObject $fedora_object
 *   The fedora object
 */
function islandora_markup_editor_savedata(AbstractObject $fedora_object) {
  // @codingStandardsIgnoreStart
  $data = html_entity_decode(stripslashes(check_plain($_POST['text'])), ENT_QUOTES, 'UTF-8');
  $cwrc = str_replace('<br>', '<br />', $data);
  // @codingStandardsIgnoreEnd
  $cwrc = str_replace('&', '&amp;', $cwrc);
  // Update ds.
  if (!isset($fedora_object["OBJ"])) {
    $obj_ds = $fedora_object->constructDatastream('OBJ', 'M');
  }
  else {
    $obj_ds = $fedora_object["OBJ"];
  }
  $obj_ds->setContentFromString($cwrc);
  drupal_json_output($cwrc);
}

/**
 * Implements hook_islandora_required_objects().
 */
function islandora_markup_editor_islandora_required_objects(IslandoraTuque $connection) {
  $module_path = drupal_get_path('module', 'islandora_markup_editor');
  // Born Digital Content Model.
  $markup_editor_model = $connection->repository->constructObject('islandora:bornDigitalCModel');
  $markup_editor_model->owner = 'fedoraAdmin';
  $markup_editor_model->label = 'Islandora Born Digital Content Model';
  $markup_editor_model->models = 'fedora-system:ContentModel-3.0';
  // ISLANDORACM Datastream.
  $datastream = $markup_editor_model->constructDatastream('ISLANDORACM', 'X');
  $datastream->label = 'Islandora content model';
  $datastream->mimetype = 'text/xml';
  $datastream->setContentFromFile("$module_path/xml/islandora_markup_editor_content_model.xml", FALSE);
  $markup_editor_model->ingestDatastream($datastream);
  // DS-COMPOSITE-MODEL Datastream.
  $datastream = $markup_editor_model->constructDatastream('DS-COMPOSITE-MODEL', 'X');
  $datastream->label = 'DS-COMPOSITE-MODEL';
  $datastream->mimetype = 'text/xml';
  $datastream->setContentFromFile("$module_path/xml/islandora_markup_editor_ds_composite_model.xml", FALSE);
  $markup_editor_model->ingestDatastream($datastream);
  // Born Digital Collection.
  $markup_editor_collection = $connection->repository->constructObject('islandora:born_digital_collection');
  $markup_editor_collection->owner = 'fedoraAdmin';
  $markup_editor_collection->label = 'Markup Editor Collection';
  $markup_editor_collection->models = 'islandora:collectionCModel';
  $markup_editor_collection->relationships->add(FEDORA_RELS_EXT_URI, 'isMemberOfCollection', 'islandora:root');
  // Collection Policy Datastream.
  $datastream = $markup_editor_collection->constructDatastream('COLLECTION_POLICY', 'X');
  $datastream->label = 'Collection policy';
  $datastream->mimetype = 'text/xml';
  $datastream->setContentFromFile("$module_path/xml/islandora_markup_editor_collection_policy.xml", FALSE);
  $markup_editor_collection->ingestDatastream($datastream);
  // TN Datastream.
  $datastream = $markup_editor_collection->constructDatastream('TN', 'M');
  $datastream->label = 'Thumbnail';
  $datastream->mimetype = 'image/png';
  $datastream->setContentFromFile("$module_path/images/folder.png", FALSE);
  $markup_editor_collection->ingestDatastream($datastream);
  return array(
    'islandora_markup_editor' => array(
      'title' => 'Islandora markup editor',
      'objects' => array(
        $markup_editor_model,
        $markup_editor_collection,
      ),
    ),
  );
}

/**
 * Implements hook_islandora_xml_form_builder_forms().
 */
function islandora_markup_editor_islandora_xml_form_builder_forms() {
  $module_path = drupal_get_path('module', 'islandora_markup_editor');
  return array(
    'Born Digital MODS form' => array(
      'form_file' => "$module_path/xml/islandora_markup_editor_form_mods.xml",
    ),
  );
}

/**
 * Implements hook_islandora_content_model_forms_form_associations().
 */
function islandora_markup_editor_islandora_content_model_forms_form_associations() {
  return array(
    'islandora_markup_editor_mods_form' => array(
      'content_model' => 'islandora:bornDigitalCModel',
      'form_name' => 'Born Digital MODS form',
      'dsid' => 'MODS',
      'title_field' => array('titleInfo', 'title'),
      'transform' => 'mods_to_dc.xsl',
      'template' => FALSE,
    ),
  );
}

/**
 * Implements hook_theme().
 */
function islandora_markup_editor_theme($existing, $type, $theme, $path) {
  return array(
    'islandora_markup_editor' => array(
      'template' => 'theme/islandora-markup-editor',
      'pattern' => 'islandora_markup_editor__',
      'variables' => array('islandora_object' => NULL),
    ),
  );
}

/**
 * Prepare a schema for a born digital object, from its RELS-EXT.
 *
 * @param AbstractObject $object
 *   The fedora object to load the schema for.
 *
 * @return array
 *   The formatted schema array.
 */
function islandora_markup_editor_prepare_schema(AbstractObject $object) {
  $rel = $object->relationships->get(ISLANDORA_RELS_EXT_URI, 'hasSchema');

  $schema_pid = $rel[0]['object']['value'];
  $schema = islandora_object_load($schema_pid);

  $rdf_datastream = $schema['RDF-SCHEMA'];
  $css_datastream = $schema['RDF-CSS'];

  $schema_dc = new DublinCore($schema['DC']->content);
  $all_titles = $schema_dc->dc->dc['dc:title'];

  return array(
    'schemas' => array(
      "tei" => array(
        "name" => $all_titles[0],
        "url" => url("islandora/object/$schema_pid/datastream/RDF-SCHEMA/view/$rdf_datastream->label"),
        "cssUrl" => url("islandora/object/$schema_pid/datastream/RDF-CSS/view/$css_datastream->label"),
        "pid" => $schema_pid,
      ),
    ),
  );
}

/**
 * Implements hook_preproccess().
 */
function islandora_markup_editor_preprocess_islandora_markup_editor(&$variables) {
  global $base_url;
  global $user;

  module_load_include('inc', 'islandora_paged_content', 'includes/utilities');
  module_load_include('inc', 'islandora_critical_edition', 'includes/utilities');
  module_load_include('inc', 'islandora_critical_edition', 'includes/schema_table_utils');
  module_load_include('inc', 'php_lib', 'DOMHelpers');

  $critical_edition_module_path = drupal_get_path('module', 'islandora_critical_edition');
  $islandora_markup_editor_module_path = drupal_get_path('module', 'islandora_markup_editor');
  dom_document_pretty_print_include_files();

  $view = islandora_object_access_callback(ISLANDORA_VIEW_OBJECTS, $variables['islandora_object']);
  $view_edit = islandora_object_access_callback(ISLANDORA_CRITICAL_EDITION_EDIT_WITH_CWRC_WRITER, $variables['islandora_object']);

  drupal_add_js(array('islandora_markup_editor' => array('can_edit' => $view_edit)), 'setting');
  drupal_add_js(array('islandora_markup_editor' => array('can_view' => $view)), 'setting');

  $schema_object = islandora_critical_edition_construct_schema_config_object();
  drupal_add_js(array('islandora_critical_edition' => array('schema_object' => $schema_object)), 'setting');
  drupal_add_js(array('islandora_critical_edition' => array('schema_pref' => 'tei')), 'setting');
  drupal_add_js(array('islandora_critical_edition' => array('page_schema' => 'tei')), 'setting');
  drupal_add_js(array('islandora_critical_edition' => array('page_setup' => "islandora/markupeditor/setup/")), 'setting');
  drupal_add_js(array('islandora_critical_edition' => array('page_pid' => $variables['islandora_object']->id)), 'setting');

  $validate_path = variable_get('islandora_critical_edition_validate_url', '/validator/validate.html');
  drupal_add_js(array('islandora_critical_edition' => array('base_url' => $base_url)), 'setting');
  drupal_add_js(array('islandora_critical_edition' => array('validate_path' => $validate_path)), 'setting');
  drupal_add_js(array('islandora_critical_edition' => array('module_base' => $critical_edition_module_path)), 'setting');

  drupal_add_js($critical_edition_module_path . '/CWRC-Writer/src/js/lib/jquery/jquery-1.8.3.js');
  drupal_add_js($critical_edition_module_path . "/CWRC-Writer/src/js/lib/jquery/jquery-ui-1.9.0.custom.min.js");

  drupal_add_js($islandora_markup_editor_module_path . "/js/writer_backend_delegate.js");
  drupal_add_js($islandora_markup_editor_module_path . '/js/jquery/jquery.watermark.min.js');
  drupal_add_js($islandora_markup_editor_module_path . '/js/ContextMenu/jquery.contextMenu.js');
  drupal_add_js($islandora_markup_editor_module_path . '/js/entity_search.js');
  drupal_add_css($islandora_markup_editor_module_path . '/js/ContextMenu/jquery.contextMenu.css');
  drupal_add_css($islandora_markup_editor_module_path . '/css/jquery.miniColors.css');

  drupal_add_css($critical_edition_module_path . "/css/islandora_critical_edition_style.css");
  drupal_add_css($critical_edition_module_path . "/css/style.css");
  drupal_add_css($critical_edition_module_path . "/css/islandora_critical_edition_editor.css");
  drupal_add_css($critical_edition_module_path . "/css/islandora_critical_edition.css");
  drupal_add_css($critical_edition_module_path . "/CWRC-Writer/src/smoothness/jquery-ui-1.10.3.custom.min.css");
  drupal_add_css($critical_edition_module_path . '/CWRC-Writer/src/js/lib/jquery/jquery.collapsiblepanel.css');
  drupal_add_css($critical_edition_module_path . "/css/style_2.css");
  drupal_add_css($critical_edition_module_path . "/CWRC-Writer/src/css/tei.css");
  drupal_add_css($critical_edition_module_path . "/CWRC-Writer/src/css/layout-default-latest.css");
  drupal_add_css($critical_edition_module_path . "/css/image_local.css");
  drupal_add_css($critical_edition_module_path . "/CWRC-Writer/src/js/lib/snippet/jquery.snippet.css");
  // Quick fix to make tabs taller in default drupal theme's.
  drupal_add_css($islandora_markup_editor_module_path . "/css/tab_css.css");

  drupal_add_js($critical_edition_module_path . "/CWRC-Writer/src/js/lib/jquery/jquery.layout-latest.min.js");
  drupal_add_js($critical_edition_module_path . "/CWRC-Writer/src/js/lib/jquery/jquery.layout.resizeTabLayout-1.3.js");
  drupal_add_js($critical_edition_module_path . '/CWRC-Writer/src/js/lib/jquery/jquery.collapsiblepanel.js');
  drupal_add_js($critical_edition_module_path . "/CWRC-Writer/src/js/lib/jquery/jquery.tmpl.min.js");
  drupal_add_js($critical_edition_module_path . "/CWRC-Writer/src/js/lib/jquery/jquery.watermark.min.js");
  drupal_add_js($critical_edition_module_path . "/CWRC-Writer/src/js/lib/tinymce/tiny_mce_src.js");
  drupal_add_js($critical_edition_module_path . "/CWRC-Writer/src/js/lib/tinymce/jquery.tinymce.js");
  drupal_add_js($critical_edition_module_path . "/CWRC-Writer/src/js/lib/snippet/jquery.snippet.min.js");
  drupal_add_js($critical_edition_module_path . "/CWRC-Writer/src/js/lib/tinymce/copy_event.js");
  drupal_add_js($critical_edition_module_path . "/CWRC-Writer/src/js/lib/jstree/jquery.hotkeys.js");
  drupal_add_js($critical_edition_module_path . "/CWRC-Writer/src/js/lib/jstree/jquery.jstree.js");
  drupal_add_js($critical_edition_module_path . "/CWRC-Writer/src/js/lib/moment/moment.min.js");
  drupal_add_js($critical_edition_module_path . "/CWRC-Writer/src/js/lib/objtree/ObjTree.js");
  drupal_add_js($critical_edition_module_path . "/CWRC-Writer/src/js/utilities.js");
  drupal_add_js($critical_edition_module_path . "/CWRC-Writer/src/js/filemanager.js");
  drupal_add_js($critical_edition_module_path . "/CWRC-Writer/src/js/entitieslist.js");
  drupal_add_js($critical_edition_module_path . "/CWRC-Writer/src/js/entities_model.js");
  drupal_add_js($critical_edition_module_path . "/CWRC-Writer/src/js/relations.js");
  drupal_add_js($critical_edition_module_path . "/CWRC-Writer/src/js/validation.js");
  drupal_add_js($critical_edition_module_path . "/CWRC-Writer/src/js/selection.js");
  drupal_add_js($critical_edition_module_path . "/CWRC-Writer/src/js/delegator.js");
  drupal_add_js($critical_edition_module_path . "/CWRC-Writer/src/js/dialogs/dialog_addevent.js");
  drupal_add_js($critical_edition_module_path . "/CWRC-Writer/src/js/dialogs/dialog_addorg.js");
  drupal_add_js($critical_edition_module_path . "/CWRC-Writer/src/js/dialogs/dialog_addperson.js");
  drupal_add_js($critical_edition_module_path . "/CWRC-Writer/src/js/dialogs/dialog_addplace.js");
  drupal_add_js($critical_edition_module_path . "/CWRC-Writer/src/js/dialogs/dialog_citation.js");
  drupal_add_js($critical_edition_module_path . "/CWRC-Writer/src/js/dialogs/dialog_correction.js");
  drupal_add_js($critical_edition_module_path . "/CWRC-Writer/src/js/dialogs/dialog_date.js");
  drupal_add_js($critical_edition_module_path . "/CWRC-Writer/src/js/dialogs/dialog_header.js");
  drupal_add_js($critical_edition_module_path . "/CWRC-Writer/src/js/dialogs/dialog_keyword.js");
  drupal_add_js($critical_edition_module_path . "/CWRC-Writer/src/js/dialogs/dialog_link.js");
  drupal_add_js($critical_edition_module_path . "/CWRC-Writer/src/js/dialogs/dialog_message.js");
  drupal_add_js($critical_edition_module_path . "/CWRC-Writer/src/js/dialogs/dialog_note.js");
  drupal_add_js($critical_edition_module_path . "/CWRC-Writer/src/js/dialogs/dialog_search.js");
  drupal_add_js($critical_edition_module_path . "/CWRC-Writer/src/js/dialogs/dialog_settings.js");
  drupal_add_js($critical_edition_module_path . "/CWRC-Writer/src/js/dialogs/dialog_title.js");
  drupal_add_js($critical_edition_module_path . "/CWRC-Writer/src/js/dialogs/dialog_triple.js");
  drupal_add_js($critical_edition_module_path . "/CWRC-Writer/src/js/dialogs/dialog_filemanager.js");
  drupal_add_js($critical_edition_module_path . "/CWRC-Writer/src/js/structuretree.js");
  drupal_add_js($critical_edition_module_path . "/js/dialog_text_image_anno.js");
  drupal_add_js($critical_edition_module_path . "/CWRC-Writer/src/js/editor.js");
  drupal_add_js($critical_edition_module_path . "/CWRC-Writer/src/js/tagger.js");
  drupal_add_js($critical_edition_module_path . "/CWRC-Writer/src/js/dialog.js");
  drupal_add_js($islandora_markup_editor_module_path . "/js/startup.js");
  drupal_add_js($critical_edition_module_path . "/js/init.js");
  drupal_add_js($critical_edition_module_path . "/CWRC-Writer/src/js/lib/tinymce/jquery.tinymce.js");
}

/**
 * Menu callback to provide setup info for the cwrc-writer/viewer.
 *
 * @param AbstractObject $fedora_object
 *   Fedora object to provide setup for.
 */
function islandora_markup_editor_setup(AbstractObject $fedora_object) {
  global $user;
  module_load_include('inc', 'islandora_basic_collection', 'includes/utilities');
  module_load_include('inc', 'islandora_paged_content', 'includes/utilities');

  $stroke_width = variable_get('image_annotation_annotation_stroke_width', '1%');
  $pages = array();
  $results = array();
  $results['uid'] = $user->uid;
  $results['position'] = "1";
  $results['pages'] = $pages[0] = $fedora_object->id;
  $results['title'] = $fedora_object->label;
  $results['no_edit'] = FALSE;
  $results['page_count'] = 1;
  $results['islandora_anno_stroke_width'] = '1%';

  $place_entity_collection = variable_get('islandora_entities_places_collection', 'islandora:entity_collection');
  $results['create_entity_callbacks']['places'] = url('islandora/object/' . $place_entity_collection . '/manage/overview/ingest');
  $event_entity_collection = variable_get('islandora_entities_events_collection', 'islandora:entity_collection');
  $results['create_entity_callbacks']['events'] = url('islandora/object/' . $event_entity_collection . '/manage/overview/ingest');
  $organization_entity_collection = variable_get('islandora_entities_organizations_collection', 'islandora:entity_collection');
  $results['create_entity_callbacks']['organizations'] = url('islandora/object/' . $organization_entity_collection . '/manage/overview/ingest');
  $person_entity_collection = variable_get('islandora_entities_people_collection', 'islandora:entity_collection');
  $results['create_entity_callbacks']['people'] = url('islandora/object/' . $person_entity_collection . '/manage/overview/ingest');

  drupal_json_output($results);
}

/**
 * Implements hook_CMODEL_PID_islandora_view_object().
 */
function islandora_markup_editor_islandora_bornDigitalCModel_islandora_view_object($object, $page_number, $page_size) {
  return theme('islandora_markup_editor', array('islandora_object' => $object));
}

/**
 * Implements hook_islandora_object_ingested().
 */
function islandora_markup_editor_islandora_bornDigitalCModel_islandora_object_ingested(AbstractObject $object) {
  module_load_include('inc', 'islandora_critical_edition', 'includes/utilities');
  // Ensure a relationship exists with a schema.
  $schema_collection = islandora_object_load('islandora:tei_schema_collection');
  $schema = islandora_critical_edition_construct_schema_config_object();
  $object->relationships->add(ISLANDORA_RELS_EXT_URI, 'hasSchema', $schema['schemas']['tei']['pid'], RELS_TYPE_PLAIN_LITERAL);
}

/**
 * Implements hook_islandora_ingest_steps().
 */
function islandora_markup_editor_islandora_bornDigitalCModel_islandora_ingest_steps() {
  return array(
    'islandora_tei_upload' => array(
      'weight' => 10,
      'type' => 'form',
      'form_id' => 'islandora_markup_editor_tei_upload_form',
      'module' => 'islandora_markup_editor',
      'file' => 'includes/tei_upload.form.inc',
    ),
  );
}
